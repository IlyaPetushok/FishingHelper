version: '3.3'
services:
  rabbit:
    image: rabbitmq:3-management
    container_name: rabbit_container
    networks:
      - app-network
    ports:
      - "5436:15672"
      - "5672:5672"
  load-balancer-nginx:
    build:
      dockerfile: ./load-balancer/nginx.loadbalancer/DockerFile
    container_name: load-balancer-nginx
    ports:
      - "9999:9999"
    networks:
      - app-network

  db:
    container_name: fishinghelper_container
    image: postgres
    environment:
      - POSTGRES_DB=FishingHelpers
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
    networks:
      - app-network
    ports:
      - "5051:5432"

  redis_db:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6051:6379"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: '256M'
    networks:
      - app-network
    command: redis-server --requirepass ""

  config-service:
    build:
      dockerfile: ./config-server/DockerFile
    container_name: config-server-container
    networks:
      - app-network
    ports:
      - "8888:8888"


  auth-service-1:
    build:
      dockerfile: ./auth-service/DockerFile
    container_name: auth-service-container-1
    networks:
      - app-network
    depends_on:
      - db
      - config-service
    environment:
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_HOST=redis_db
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/FishingHelpers
      - SPRING_CLOUD_CONFIG_URL=optional:configserver:http://config-service:8888
    ports:
      - "9091:8081"

  auth-service-2:
    build:
      dockerfile: ./auth-service/DockerFile
    container_name: auth-service-container-2
    networks:
      - app-network
    depends_on:
      - db
      - config-service
    environment:
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_HOST=redis_db
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/FishingHelpers
      - SPRING_CLOUD_CONFIG_URL=optional:configserver:http://config-service:8888
    ports:
      - "9191:8081"


  user-service-1:
    build:
      dockerfile: ./user-service/DockerFile
    container_name: user-service-container-1
    environment:
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_HOST=redis_db
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/FishingHelpers
      - SPRING_CLOUD_CONFIG_URL=optional:configserver:http://config-service:8888
    depends_on:
      - db
      - config-service
    networks:
      - app-network
    ports:
      - "9090:8080"

  user-service-2:
    build:
      dockerfile: ./user-service/DockerFile
    container_name: user-service-container-2
    environment:
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_HOST=redis_db
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/FishingHelpers
      - SPRING_CLOUD_CONFIG_URL=optional:configserver:http://config-service:8888
    depends_on:
      - db
      - config-service
    networks:
      - app-network
    ports:
      - "9190:8080"


  admin-service-1:
    build:
      dockerfile: ./admin-service/DockerFile
    container_name: admin-service-container-1
    environment:
      - SPRING_RABBIT_HOST=rabbit
      - SPRING_RABBIT_PORT=5672
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_HOST=redis_db
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/FishingHelpers
      - SPRING_CLOUD_CONFIG_URL=optional:configserver:http://config-service:8888
    depends_on:
      - db
      - config-service
    networks:
      - app-network
    ports:
      - "9092:8082"

  admin-service-2:
    build:
      dockerfile: ./admin-service/DockerFile
    container_name: admin-service-container-2
    environment:
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_HOST=redis_db
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/FishingHelpers
      - SPRING_CLOUD_CONFIG_URL=optional:configserver:http://config-service:8888
    depends_on:
      - db
      - config-service
    networks:
      - app-network
    ports:
      - "9192:8082"

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.2
    container_name: keycloak-container
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KC_DB: postgres
      KC_DB_URL: ${POSTGRES_URL}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
    command:
      - "start-dev"
    ports:
      - "7777:8080"
    networks:
      - app-network


  postgres-keycloak:
    image: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5555:5432"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge




